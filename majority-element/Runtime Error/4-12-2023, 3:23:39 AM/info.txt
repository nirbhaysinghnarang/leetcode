{"id":932157721,"lang":"python3","lang_name":"Python3","time":"3 months, 2 weeks","timestamp":1681250019,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/932157721/","is_pending":"Not Pending","title":"Majority Element","memory":"N/A","code":"class Solution:\n    def majorityElement(self, nums: List[int]) -> int:\n\n        if len(nums)==1:\n            return nums[0]\n\n        mid = len(nums)//2\n\n        left = nums[:mid]\n        right = nums[mid:]\n\n        majLeft = self.majorityElement(left)\n        numEqualsLeftCheck = 0\n\n        for elem in right:\n            if elem == majLeft:\n                numEqualsLeftCheck+=1\n\n        if numEqualsLeftCheck >= len(right)//2:\n            return majLeft\n\n        majRight = self.majorityElement(right)\n\n        numEqualsRightCheck = 0\n        for elem in left:\n            if elem == majRight:\n                numEqualsRightCheck+=1\n\n        if numEqualsRightCheck >= len(left)//2:\n            return majRight\n\n\n","compare_result":"111111110000000000000000000000000000000000000","title_slug":"majority-element","has_notes":false}