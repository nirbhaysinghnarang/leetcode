{"id":1000171503,"lang":"python3","lang_name":"Python3","time":"4 days, 1 hour","timestamp":1689943987,"status":10,"status_display":"Accepted","runtime":"89 ms","url":"/submissions/detail/1000171503/","is_pending":"Not Pending","title":"Add Two Numbers","memory":"16.3 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:\n        l1_rev = self.reverseList(l1)\n        l2_rev = self.reverseList(l2)\n\n        l1_new = []\n        l2_new = []\n\n\n        while(l1_rev):\n            l1_new.append(str(l1_rev.val))\n            l1_rev = l1_rev.next\n\n        while(l2_rev):\n            l2_new.append(str(l2_rev.val))\n            l2_rev = l2_rev.next\n\n        s = str(int(\"\".join(l1_new)) + int(\"\".join(l2_new)))[::-1]\n\n        ret = ListNode(int(s[0]))\n        curr = ret\n\n        for i in range(1, len(s)):\n            curr.next = ListNode(int(s[i]))\n            curr = curr.next\n        \n\n        return ret\n\n\n    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:\n        prev, curr = None, head\n\n        while(curr is not None):\n            nxt = curr.next\n            curr.next = prev\n            prev = curr\n            curr = nxt\n\n        return prev\n","compare_resulttitle_slug":"add-two-numbers","has_notes":false}