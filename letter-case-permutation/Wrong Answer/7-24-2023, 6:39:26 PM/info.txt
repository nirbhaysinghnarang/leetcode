{"id":1002633452,"lang":"python3","lang_name":"Python3","time":"1Â day","timestamp":1690204166,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1002633452/","is_pending":"Not Pending","title":"Letter Case Permutation","memory":"N/A","code":"class Solution:\n    def letterCasePermutation(self, s: str) -> List[str]:\n        perms = []\n\n        def dfs(i, perm):\n            if i==len(s):\n                perms.append(perm.copy())\n                return\n\n            char = s[i]\n            if char.isalpha():\n                options = [char.lower(), char.upper()]\n            else:\n                options = [char]\n\n            for option in options:\n                perm.append(option)\n                dfs(i+1, perm)\n                perm.pop()\n\n        dfs(0, [])\n        return perms\n\n            ","compare_result":"000000000000000000000000000000000000000000000000000000000000000","title_slug":"letter-case-permutation","has_notes":false}