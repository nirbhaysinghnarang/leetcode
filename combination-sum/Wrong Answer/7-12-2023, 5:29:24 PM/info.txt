{"id":992633987,"lang":"python3","lang_name":"Python3","time":"1Â week, 6Â days","timestamp":1689163164,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/992633987/","is_pending":"Not Pending","title":"Combination Sum","memory":"N/A","code":"class Solution:\n    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:\n\n        combs = []\n        candidates.sort()\n        def dfs(index, lst):\n            if sum(lst)==target:\n                if (lst) in combs:\n                    combs.append(lst)\n                    return\n            for (i,edge) in enumerate(candidates):\n                if sum(lst)<target:\n                    dfs(i, lst+[edge])\n\n        dfs(0, [])\n        return combs\n\n\n","compare_result":"0010000000000000010001000000000010000000000000110100000110010000000000000000000000000000000000000000000000000000110000000000000000000000000000000000000000000000","title_slug":"combination-sum","has_notes":false}