{"id":1002559588,"lang":"python3","lang_name":"Python3","time":"1Â day, 2Â hours","timestamp":1690197118,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1002559588/","is_pending":"Not Pending","title":"Combination Sum","memory":"N/A","code":"class Solution:\n    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:\n\n        combs = []\n        \n        def dfs(index, path, current):\n            if current==target:\n                combs.append(path.copy())\n                return\n\n            if index>=len(candidates) or current>target:\n                return\n            path.append(candidates[index])\n            current+=candidates[index]\n            dfs(index, path, current)\n            path.pop()\n            current+=candidates[index]\n            dfs(index+1, path, current)\n\n        dfs(0,[],0)\n        return combs\n\n","compare_result":"0010000000000001010001000000000010000000000000110100000110010000000000000000000000000000000000000000000000000000110000000000000000000000000000000000000000000000","title_slug":"combination-sum","has_notes":false}