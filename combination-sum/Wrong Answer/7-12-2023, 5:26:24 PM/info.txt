{"id":992632250,"lang":"python3","lang_name":"Python3","time":"1Â week, 6Â days","timestamp":1689162984,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/992632250/","is_pending":"Not Pending","title":"Combination Sum","memory":"N/A","code":"class Solution:\n    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:\n\n        combs = []\n\n        def dfs(index, lst):\n\n            if sum(lst)==target:\n                combs.append(lst)\n                return\n\n            for (i,edge) in enumerate(candidates):\n                if sum(lst)<target:\n                    dfs(i, lst+[edge])\n\n        dfs(0, [])\n        return combs\n\n\n","compare_result":"0010011001000011010001000000000010000000100100110100000111110000000000000000000000000000000000000000000000000000110000000000000000000000000000100000000001000000","title_slug":"combination-sum","has_notes":false}