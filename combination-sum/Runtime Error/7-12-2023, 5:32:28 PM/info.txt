{"id":992635806,"lang":"python3","lang_name":"Python3","time":"1Â week, 6Â days","timestamp":1689163348,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/992635806/","is_pending":"Not Pending","title":"Combination Sum","memory":"N/A","code":"class Solution:\n    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:\n\n        combs = []\n        candidates.sort()\n        def dfs(index, lst, curr_sum):\n            if curr_sum==target:\n                combs.append(lst)\n                return\n            if curr_sum > targer:\n                return\n\n            for i in range(index+1, len(candidates)):\n                dfs(i, lst+[candidates[i]], curr_sum+candidates[i])\n\n        dfs(0, [])\n        return combs\n\n\n","compare_result":"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"combination-sum","has_notes":false}