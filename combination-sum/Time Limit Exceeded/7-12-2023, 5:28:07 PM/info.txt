{"id":992633263,"lang":"python3","lang_name":"Python3","time":"1Â week, 6Â days","timestamp":1689163087,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/992633263/","is_pending":"Not Pending","title":"Combination Sum","memory":"N/A","code":"class Solution:\n    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:\n\n        combs = []\n\n        def dfs(index, lst):\n\n            if sum(lst)==target:\n                combs_sorted = [sorted(l) for l in combs]\n                if not sorted(lst) in combs_sorted:\n                    combs.append(lst)\n                \n                return\n\n            for (i,edge) in enumerate(candidates):\n                if sum(lst)<target:\n                    dfs(i, lst+[edge])\n\n        dfs(0, [])\n        return combs\n\n\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100","title_slug":"combination-sum","has_notes":false}