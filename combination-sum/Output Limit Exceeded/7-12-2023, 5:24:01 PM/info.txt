{"id":992630878,"lang":"python3","lang_name":"Python3","time":"1Â week, 6Â days","timestamp":1689162841,"status":13,"status_display":"Output Limit Exceeded","runtime":"N/A","url":"/submissions/detail/992630878/","is_pending":"Not Pending","title":"Combination Sum","memory":"N/A","code":"class Solution:\n    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:\n\n        combs = []\n\n        def dfs(index, lst):\n            print(lst)\n            if sum(lst)==target:\n                combs.append(lst)\n                return\n\n            for (i,edge) in enumerate(candidates):\n                dfs(edge, lst+[i])\n\n        dfs(0, [])\n        return combs\n\n\n","compare_result":"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"combination-sum","has_notes":false}