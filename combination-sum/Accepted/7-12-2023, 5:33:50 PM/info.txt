{"id":992636575,"lang":"python3","lang_name":"Python3","time":"1Â week, 6Â days","timestamp":1689163430,"status":10,"status_display":"Accepted","runtime":"4594 ms","url":"/submissions/detail/992636575/","is_pending":"Not Pending","title":"Combination Sum","memory":"16.5 MB","code":"class Solution:\n    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:\n\n        combs = []\n        candidates.sort()\n        def dfs(index, lst, curr_sum):\n            if curr_sum==target:\n                if not sorted(lst) in combs:\n                    combs.append(lst)\n                return\n            for (i,edge) in enumerate(candidates):\n                if curr_sum<target:\n                    dfs(i, lst+[edge], curr_sum+candidates[i])\n\n        dfs(0, [],0)\n        return combs\n\n\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum","has_notes":false}