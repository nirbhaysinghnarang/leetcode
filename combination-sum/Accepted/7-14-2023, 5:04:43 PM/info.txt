{"id":994252275,"lang":"python3","lang_name":"Python3","time":"1Â week, 4Â days","timestamp":1689334483,"status":10,"status_display":"Accepted","runtime":"74 ms","url":"/submissions/detail/994252275/","is_pending":"Not Pending","title":"Combination Sum","memory":"16.6 MB","code":"class Solution:\n    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:\n\n        combs = []\n        \n        def dfs(index, path, current):\n            if current==target:\n                combs.append(path.copy())\n                return\n\n            if index>=len(candidates) or current>target:\n                return\n\n            dfs(index, path+[candidates[index]], current+candidates[index])\n            dfs(index+1, path, current)\n\n        dfs(0,[],0)\n        return combs\n\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum","has_notes":false}