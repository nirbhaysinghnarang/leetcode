{"id":795795546,"lang":"python","lang_name":"Python","time":"10 months, 2 weeks","timestamp":1662752043,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/795795546/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"N/A","code":"# Definition for singly-linked list.\n# class ListNode(object):\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution(object):\n    def mergeTwoLists(self, l1, l2):\n        \"\"\"\n        :type l1: ListNode\n        :type l2: ListNode\n        :rtype: ListNode\n        \"\"\"\n        if l1 is None and l2 is None:\n            return []\n        if l1 is None:\n            return l2\n        if l2 is None:\n            return l1\n        if(l1.val<l2.val):\n            tmp = head = ListNode(l1.val)\n            l1 = l1.next\n        else:\n            tmp = head = ListNode(l2.val)\n            l2 = l2.next\n    \n        while(l1 is not None and l2 is not None):\n            if(l1.val<l2.val):\n                tmp.next  = ListNode(l1.val)\n                l1 = l1.next\n            else:\n                tmp.next = ListNode(l2.val)\n                l2 = l2.next\n            tmp = tmp.next\n        \n        while(l1):\n            tmp.next = ListNode(l1.val)\n            l1 = l1.next\n            tmp = tmp.next\n            \n        while(l2):\n            tmp.next = ListNode(l2.val)\n            l2 = l2.next\n            tmp = tmp.next\n                                \n            \n        \n        return head\n       ","compare_result":"1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"merge-two-sorted-lists","has_notes":false}