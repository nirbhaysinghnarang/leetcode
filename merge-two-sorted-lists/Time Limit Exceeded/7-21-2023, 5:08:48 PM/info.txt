{"id":1000129864,"lang":"python3","lang_name":"Python3","time":"4 days, 2 hours","timestamp":1689939528,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1000129864/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"N/A","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:\n        if not list1:\n            return list2\n\n        if not list2:\n            return list1\n\n        if not list1 and not list2:\n            return []\n\n        retList = ListNode()\n\n        while(list1 is not None and list2 is not None):\n            if list1.val <= list2.val:\n                if not retList:\n                    retList = list1\n                else:\n                    retList.next = list1\n                list1 = list1.next\n            else:\n                if not retList:\n                    retList = list2\n                else:\n                    retList.next = list2\n                list2 = list2.next\n\n\n        while(list2 is not None and list1 is None):\n            if not retList:\n                retList = list2\n            else:\n                retList.next = list2\n\n        while(list1 is not None and list2 is None):\n            if not retList:\n                retList = list1\n\n            else:\n                retList.next = list1\n\n        return retList\n\n            \n\n\n\n","compare_result":"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"merge-two-sorted-lists","has_notes":false}