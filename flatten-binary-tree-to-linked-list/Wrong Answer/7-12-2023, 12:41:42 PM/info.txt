{"id":992460436,"lang":"python3","lang_name":"Python3","time":"1 week, 6 days","timestamp":1689145902,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/992460436/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def flatten(self, root: Optional[TreeNode]) -> None:\n        \"\"\"\n        Do not return anything, modify root in-place instead.\n        \"\"\"\n        arr = []\n        def helper(root):\n            if not root:\n                return \n            arr.append(root.val)\n            helper(root.left)\n            helper(root.right)\n        helper(root)\n        root_og = root\n        for v in arr:\n            if root:\n                root.val = v\n                root.left = None\n                root = root.right\n\n        return root_og\n            \n            \n\n            \n\n","compare_result":"011010001000110000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"flatten-binary-tree-to-linked-list","has_notes":false}