{"id":991802003,"lang":"python3","lang_name":"Python3","time":"2Â weeks","timestamp":1689077938,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/991802003/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def flatten(self, root: Optional[TreeNode]) -> None:\n        \"\"\"\n        Do not return anything, modify root in-place instead.\n        \"\"\"\n\n        if not root:\n            return None\n        \n        #preorder template\n\n        #do something\n        tmp_left = root.left\n        tmp_right = root.right\n\n        root.left = None\n        root.right = tmp_left\n        root.right.right = tmp_right\n\n        flatten(root.left)\n        flatten(root.right)\n\n        return root\n\n","compare_result":"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"flatten-binary-tree-to-linked-list","has_notes":false}