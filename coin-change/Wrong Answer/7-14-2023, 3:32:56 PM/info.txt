{"id":994202077,"lang":"python3","lang_name":"Python3","time":"1 week, 4 days","timestamp":1689328976,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/994202077/","is_pending":"Not Pending","title":"Coin Change","memory":"N/A","code":"import sys\nclass Solution:\n    def coinChange(self, coins: List[int], amount: int) -> int:\n        \n        def dfs(start_index, coins_used, run_total):\n            if run_total == amount:\n                return len(coins_used)\n\n            if run_total>amount:\n                return -1\n            ans = -1\n            for (i, coin) in enumerate(coins):\n                if run_total + coin < amount:\n                    coins_used.append(coin)\n                    ans = min(ans, dfs(i, coins_used, run_total+coin))\n                    coins_used.pop()\n\n            return ans\n\n        return dfs(0,[],0)\n","compare_result":"011001011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"coin-change","has_notes":false}