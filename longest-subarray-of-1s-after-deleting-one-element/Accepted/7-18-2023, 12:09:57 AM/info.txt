{"id":996954820,"lang":"python3","lang_name":"Python3","time":"1Â week","timestamp":1689619197,"status":10,"status_display":"Accepted","runtime":"619 ms","url":"/submissions/detail/996954820/","is_pending":"Not Pending","title":"Longest Subarray of 1's After Deleting One Element","memory":"19.2 MB","code":"class Solution:\n    def longestSubarray(self, nums: List[int]) -> int:\n        L = 0\n        max_count = 0\n        window_set = Counter()\n        for R in range(len(nums)):\n            # increment count\n            window_set[nums[R]]+=1\n            # keep on moving left ptr until we have at most 1 one in the window\n            while window_set[0] > 1:\n                window_set[nums[L]] -= 1\n                L+=1\n\n            max_count = max(max_count, window_set[1])\n        if max_count == len(nums):\n            return max_count-1\n        return max_count\n            \n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-subarray-of-1s-after-deleting-one-element","has_notes":false}