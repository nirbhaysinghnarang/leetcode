{"id":991779778,"lang":"python3","lang_name":"Python3","time":"2Â weeks","timestamp":1689075720,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/991779778/","is_pending":"Not Pending","title":"Leaf-Similar Trees","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def leafSimilar(self, root1: Optional[TreeNode], root2: Optional[TreeNode]) -> bool:\n        return self.inorder(root1, [])==self.inorder(root2, [])\n    \n  \n    \n    def inorder(self, root, sequence):\n        if root is None:\n            return []\n        \n        if root.left is None and root.right is None:\n            sequence.append(root.val)\n            return sequence\n\n        leftSeq = self.inorder(root.left, sequence)\n        rightSeq = self.inorder(root.right, sequence)\n        return leftSeq + sequence + rightSeq\n\n        \n\n        \n        ","compare_result":"011110110101011101010101010101010101010111","title_slug":"leaf-similar-trees","has_notes":false}