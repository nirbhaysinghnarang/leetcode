{"id":991781647,"lang":"python3","lang_name":"Python3","time":"2Â weeks","timestamp":1689075920,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/991781647/","is_pending":"Not Pending","title":"Leaf-Similar Trees","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def leafSimilar(self, root1: Optional[TreeNode], root2: Optional[TreeNode]) -> bool:\n        return self.getLeaves(root1, [])==self.getLeaves(root2, [])\n    \n  \n    \n    def getLeaves(self, root):\n        if not root:\n            return \n        arr = []\n        def helper(root):\n            if root is not None:\n                if root.left is None and root.right is None:\n                    arr.append(root.val)\n                helper(root.left)\n                helper(root.right)\n        helper(root)\n        return arr\n        \n\n        \n        ","compare_result":"000000000000000000000000000000000000000000","title_slug":"leaf-similar-trees","has_notes":false}