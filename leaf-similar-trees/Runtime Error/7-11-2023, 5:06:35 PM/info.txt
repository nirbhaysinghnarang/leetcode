{"id":991776540,"lang":"python3","lang_name":"Python3","time":"2Â weeks","timestamp":1689075395,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/991776540/","is_pending":"Not Pending","title":"Leaf-Similar Trees","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def leafSimilar(self, root1: Optional[TreeNode], root2: Optional[TreeNode]) -> bool:\n        return self.getSequence(root1, [])==getSequence(root2, [])\n    \n    def isLeaf(self, root):\n            return root.left is None and root.right is None\n    \n    def getSequence(self, root, sequence):\n        \n\n        if root is None:\n            return []\n        \n        if self.isLeaf(root):\n            sequence.append(root)\n            return self.getSequence(None, sequence)\n\n        leftSeq = self.getSequence(root.left, sequence)\n        rightSeq = self.getSequence(root.right, sequence)\n\n        return leftSeq.append(rightSeq)\n\n        \n\n        \n        ","compare_result":"000000000000000000000000000000000000000000","title_slug":"leaf-similar-trees","has_notes":false}