{"id":1000736166,"lang":"python3","lang_name":"Python3","time":"3 days, 6 hours","timestamp":1690012404,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1000736166/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n\n    ans = 0\n    \n    def dfs(self, root):\n        if not root:\n            return -1\n        left = self.dfs(root.left)\n        right = self.dfs(root.right)\n        nonlocal ans\n        ans = max(ans, 2+left+right)\n        return 1 +max(left, right)\n\n\n    def diameterOfBinaryTree(self, root: Optional[TreeNode]) -> int:\n        self.dfs(root)\n        return ans","compare_result":"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"diameter-of-binary-tree","has_notes":false}