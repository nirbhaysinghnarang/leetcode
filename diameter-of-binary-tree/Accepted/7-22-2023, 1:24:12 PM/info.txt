{"id":1000736629,"lang":"python3","lang_name":"Python3","time":"3 days, 6 hours","timestamp":1690012452,"status":10,"status_display":"Accepted","runtime":"69 ms","url":"/submissions/detail/1000736629/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"18.8 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n\n  \n\n\n    def diameterOfBinaryTree(self, root: Optional[TreeNode]) -> int:\n        ans = 0\n    \n        def dfs(root):\n            if not root:\n                return -1\n            left = dfs(root.left)\n            right = dfs(root.right)\n            nonlocal ans\n            ans = max(ans, 2+left+right)\n            return 1 +max(left, right)\n        dfs(root)\n        return ans","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree","has_notes":false}