{"id":975514291,"lang":"python3","lang_name":"Python3","time":"1Â month","timestamp":1687260637,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/975514291/","is_pending":"Not Pending","title":"The K Weakest Rows in a Matrix","memory":"N/A","code":"import functools\nclass Solution:\n    def kWeakestRows(self, mat: List[List[int]], k: int) -> List[int]:\n        def count_soldiers(mat,r1):\n            cnt = 0\n            for elem in mat[r1]:\n                if(elem!=0):\n                    cnt+=1\n                else:\n                    return cnt\n                \n        soldiers_dic = {}\n        for i in range(len(mat)-1):\n            soldiers_dic[i] = count_soldiers(mat, i)\n\n        def is_weaker(r1, r2):\n            return soldiers_dic[r1]<soldiers_dic[r2] or (soldiers_dic[r1]==soldiers_dic[r2] and r1<r2)\n            \n        \n            \n        \n        rows = list(soldiers_dic.keys())\n        print(sorted(rows, key=functools.cmp_to_key(is_weaker)))\n        return rows[:k]\n\n\n        \n\n\n    \n","compare_result":"0000000000000000000000000000000000000000000000000000","title_slug":"the-k-weakest-rows-in-a-matrix","has_notes":false}