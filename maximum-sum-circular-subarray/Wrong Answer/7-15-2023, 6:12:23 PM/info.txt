{"id":995047975,"lang":"python3","lang_name":"Python3","time":"1 week, 3 days","timestamp":1689424943,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/995047975/","is_pending":"Not Pending","title":"Maximum Sum Circular Subarray","memory":"N/A","code":"class Solution:\n    def maxSubarraySumCircular(self, nums: List[int]) -> int:\n        def maxSum(nums):\n            maxSum = nums[0]\n            curSum = 0\n\n            for n in nums:\n                curSum = max(curSum, 0)\n                curSum += n\n                maxSum = max(maxSum, curSum)\n\n            return maxSum\n\n        nums.append(nums[0])\n        n2 = nums[1:]\n        return max(maxSum(nums[1:]),  maxSum(n2))\n\n\n      ","compare_result":"111111110111111011101110100001100001101110011101101111011101011100011100101100100011110000001101100001100111111","title_slug":"maximum-sum-circular-subarray","has_notes":false}