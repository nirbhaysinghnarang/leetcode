{"id":1002968480,"lang":"python3","lang_name":"Python3","time":"18 hours, 2 minutes","timestamp":1690228845,"status":10,"status_display":"Accepted","runtime":"62 ms","url":"/submissions/detail/1002968480/","is_pending":"Not Pending","title":"Closest Binary Search Tree Value","memory":"18.4 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def closestValue(self, root: Optional[TreeNode], target: float) -> int:\n\n        nearest = float('inf')\n\n        def dfs(root):\n            if not root:\n                return \n            \n            nonlocal nearest\n\n            if abs(root.val - target) < abs(nearest-target):\n                nearest = root.val\n            if abs(root.val - target) == abs(nearest-target):\n                nearest = min(root.val, nearest) \n           \n            if root.val > target:\n                dfs(root.left)\n            else:\n                dfs(root.right)\n\n        dfs(root)\n        return nearest","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"closest-binary-search-tree-value","has_notes":false}