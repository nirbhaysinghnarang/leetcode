{"id":992465073,"lang":"python3","lang_name":"Python3","time":"1 week, 6 days","timestamp":1689146324,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/992465073/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isBalanced(self, root: Optional[TreeNode]) -> bool:\n\n        def getHeight(root):\n            if not root:\n                return 0\n            return (1+getHeight(root.left), 1+getHeight(root.right))\n\n\n        if not root:\n            return True\n\n        return abs(getHeight(root.left) - getHeight(root.right)) < 1","compare_result":"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"balanced-binary-tree","has_notes":false}