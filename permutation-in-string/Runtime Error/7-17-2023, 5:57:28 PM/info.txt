{"id":996665917,"lang":"python3","lang_name":"Python3","time":"1 week, 1 day","timestamp":1689596848,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/996665917/","is_pending":"Not Pending","title":"Permutation in String","memory":"N/A","code":"from collections import Counter\nclass Solution:\n    def checkInclusion(self, s1: str, s2: str) -> bool:\n        s1_freq_dic = dict(Counter(s1))\n        window_size =len(s1)\n        L = 0\n        R_INIT = window_size-1\n        window_dic = dict(Counter(s2[:R_INIT+1]))\n        for R in range(R_INIT, len(s2)):\n            if s2[R] in window_dic:\n                window_dic[s2[R]]+=1\n            else:\n                window_dic[s2[R]]=1\n\n            if window_dic==s1_freq_dic:\n                return True\n\n            window_dic[s2[L]] = max(0, window_dic[s2[L]-1])\n            L+=1\n\n        return False\n\n            \n            \n        return False\n\n","compare_result":"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"permutation-in-string","has_notes":false}