{"id":996668715,"lang":"python3","lang_name":"Python3","time":"1 week, 1 day","timestamp":1689597128,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/996668715/","is_pending":"Not Pending","title":"Permutation in String","memory":"N/A","code":"from collections import Counter\nclass Solution:\n    def checkInclusion(self, s1: str, s2: str) -> bool:\n        s1_freq_dic = dict(Counter(s1))\n        window_size =len(s1)\n        L = 0\n        R_INIT = window_size-1\n        window_dic = dict(Counter(s2[:R_INIT+1]))\n        print(window_dic)\n        for R in range(R_INIT, len(s2)):\n            print(window_dic)\n            print(s2[L:R+1])\n            if s2[R] in window_dic:\n                window_dic[s2[R]]+=1\n            else:\n                window_dic[s2[R]]=1\n\n            if window_dic==s1_freq_dic:\n                return True\n\n            \n            if window_dic[s2[L]]==1:\n                del window_dic[s2[L]]\n            else:\n                window_dic[s2[L]]-=1\n\n            L+=1\n\n        return False\n\n            \n            \n        return False\n\n","compare_result":"010000010110010111111111110111110111111111111111111111111000000000001110000000000000000000000000000000000000","title_slug":"permutation-in-string","has_notes":false}