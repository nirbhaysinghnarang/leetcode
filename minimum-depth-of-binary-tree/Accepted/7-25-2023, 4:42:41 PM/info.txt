{"id":1003486302,"lang":"python3","lang_name":"Python3","time":"2 hours, 50 minutes","timestamp":1690283561,"status":10,"status_display":"Accepted","runtime":"617 ms","url":"/submissions/detail/1003486302/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"58.2 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def minDepth(self, root: Optional[TreeNode]) -> int:\n        if root is None:\n            return 0\n        if root.left and root.right:\n            return 1+min(self.minDepth(root.left), self.minDepth(root.right))\n        return 1+max(self.minDepth(root.left), self.minDepth(root.right))","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"minimum-depth-of-binary-tree","has_notes":false}