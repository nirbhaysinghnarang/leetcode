{"id":1000346596,"lang":"python3","lang_name":"Python3","time":"3Â days, 20Â hours","timestamp":1689960225,"status":10,"status_display":"Accepted","runtime":"199 ms","url":"/submissions/detail/1000346596/","is_pending":"Not Pending","title":"Minimum Window Substring","memory":"17.2 MB","code":"from collections import Counter\n\nclass Solution:\n\n    def minWindow(self, s: str, t: str) -> str:\n        target_counter = Counter(t)\n        required_chars = len(target_counter)\n        L, R = 0, 0\n        min_ss = \"\"\n        min_ss_cnt = float('inf')\n\n        while R < len(s):\n            if s[R] in target_counter:\n                target_counter[s[R]] -= 1\n                if target_counter[s[R]] == 0:\n                    required_chars -= 1\n\n            while required_chars == 0:\n                if R - L + 1 < min_ss_cnt:\n                    min_ss_cnt = R - L + 1\n                    min_ss = s[L:R+1]\n\n                if s[L] in target_counter:\n                    target_counter[s[L]] += 1\n                    if target_counter[s[L]] > 0:\n                        required_chars += 1\n\n                L += 1\n\n            R += 1\n\n        return min_ss\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-window-substring","has_notes":false}