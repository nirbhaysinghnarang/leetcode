{"id":992085451,"lang":"python3","lang_name":"Python3","time":"1 week, 6 days","timestamp":1689100937,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/992085451/","is_pending":"Not Pending","title":"Path Sum II","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n\n    def pathSum(self, root: Optional[TreeNode], targetSum: int) -> List[List[int]]:\n\n        paths = []\n\n        def dfs(root, value, target, path):\n            if root is None:\n                return\n            elif root.left is None and root.right is None:\n                if value+root.val == target:\n                    paths.append(path)\n                    return\n            else:\n                path.append(root.val)\n                dfs(root.left, value+root.val, target, path)\n                dfs(root.right, value+root.val, target, path)\n\n        dfs(root, 0, targetSum, [])\n        return paths","compare_result":"0111101110111011100101011011011000001111111001011111011111010010001011001000111100111101010110110101100100110010000","title_slug":"path-sum-ii","has_notes":false}