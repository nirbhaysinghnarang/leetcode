{"id":992090252,"lang":"python3","lang_name":"Python3","time":"1 week, 6 days","timestamp":1689101331,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/992090252/","is_pending":"Not Pending","title":"Path Sum II","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n\n    def pathSum(self, root: Optional[TreeNode], targetSum: int) -> List[List[int]]:\n        paths = []\n        def dfs(root, value, target, path, paths):\n            if not root:\n                return \n            \n\n            if not root.left and not root.right:\n                if value+root.val==target:\n                    path.append(root.val)\n                    paths.append(list(path))\n                    return\n            path.append(root.val)\n            dfs(root.left, value+root.val, target,path, paths)\n            dfs(root.right, value+root.val, target, path, paths)\n\n        dfs(root, 0, targetSum, [], paths)\n        return paths\n          ","compare_result":"0111111111111111110111111011111010001111111011011111011111010111011011101001011111111101110111110101100100110010001","title_slug":"path-sum-ii","has_notes":false}