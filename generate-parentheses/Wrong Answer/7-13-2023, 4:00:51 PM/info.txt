{"id":993393914,"lang":"python3","lang_name":"Python3","time":"1Â week, 5Â days","timestamp":1689244251,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/993393914/","is_pending":"Not Pending","title":"Generate Parentheses","memory":"N/A","code":"class Solution:\n    def generateParenthesis(self, n: int) -> List[str]:\n        combs = []\n        def dfs(st, so_far, o):\n            if(len(so_far)==2*n):\n                print(so_far)\n                combs.append(so_far)\n                return\n            if o==0:\n                for _ in range(n):\n                    dfs(st+1, so_far+'(',1)\n            else:\n                dfs(st+1, so_far+')', o-1)\n\n        dfs(0,'',0)\n        return combs\n\n            \n\n\n","compare_result":"01000000","title_slug":"generate-parentheses","has_notes":false}