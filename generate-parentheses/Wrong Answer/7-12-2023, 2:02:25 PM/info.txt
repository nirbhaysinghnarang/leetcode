{"id":992510227,"lang":"python3","lang_name":"Python3","time":"1Â week, 6Â days","timestamp":1689150745,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/992510227/","is_pending":"Not Pending","title":"Generate Parentheses","memory":"N/A","code":"class Solution:\n    def generateParenthesis(self, n: int) -> List[str]:\n        combs = []\n        def gen(n, path, numstart, numend):\n            if len(path)==2*n:\n                combs.append(\"\".join(path))\n                return\n            if numstart<n:\n                gen(n, path+['('], numstart+1, numend)\n            if numend<n:\n                gen(n, path+[')'], numstart, numend+1)\n\n        gen(n, [], 0, 0)\n        return combs\n\n\n            \n\n\n","compare_result":"00000000","title_slug":"generate-parentheses","has_notes":false}