{"id":993400529,"lang":"python3","lang_name":"Python3","time":"1 week, 5 days","timestamp":1689244911,"status":10,"status_display":"Accepted","runtime":"38 ms","url":"/submissions/detail/993400529/","is_pending":"Not Pending","title":"Generate Parentheses","memory":"16.7 MB","code":"class Solution:\n    def generateParenthesis(self, n: int) -> List[str]:\n        combs = []\n\n        def dfs(st, so_far, open_p, closed_p):\n            if(len(so_far)==2*n):\n                combs.append(so_far)\n                return\n\n            chars = ['(',')']\n            if closed_p<open_p:\n                dfs(st+1, so_far+')', open_p, closed_p+1)\n            if open_p<n:\n                dfs(st+1, so_far+'(', open_p+1, closed_p)\n           \n        dfs(0,\"\",0,0)\n        return combs\n                \n\n            \n\n            \n        dfs(0, \"\", 0, 0)\n        \n\n            \n\n\n","compare_result":"11111111","title_slug":"generate-parentheses","has_notes":false}