{"id":992921501,"lang":"python3","lang_name":"Python3","time":"1 week, 5 days","timestamp":1689187230,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/992921501/","is_pending":"Not Pending","title":"Word Search","memory":"N/A","code":"class Solution:\n    def exist(self, board: List[List[str]], word: str) -> bool:\n        m = len(board)-1\n        n = len(board[0])-1\n        def dfs(r, c, w):\n            if w==word:\n                return True\n\n            if len(w)>len(word):\n                return False\n        \n            hor_mov = [max(0,r-1), min(m, r+1)]\n            ver_mov = [max(0, c-1), min(n, c+1)]\n            print(hor_mov, ver_mov)\n\n            for i in hor_mov:\n                for j in ver_mov:\n                    if i!=r and not board[i][c] in w:\n                        if dfs(i,c, w+board[r][c]): \n                            return True\n                    \n                    if j!=c and not board[r][j] in w:\n                        if dfs(r, j, w+board[r][c]):\n                            return True\n\n        for i in range(len(board)):\n            for j in range(len(board[0])):\n                if dfs(i,j,\"\"):\n                    return True\n        return False","compare_result":"1110111010011000000001001011000111111101011010111010110000100011000100110001001011001","title_slug":"word-search","has_notes":false}