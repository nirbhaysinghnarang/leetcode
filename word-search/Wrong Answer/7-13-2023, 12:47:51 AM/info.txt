{"id":992947918,"lang":"python3","lang_name":"Python3","time":"1 week, 5 days","timestamp":1689189471,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/992947918/","is_pending":"Not Pending","title":"Word Search","memory":"N/A","code":"class Solution:\n    def exist(self, board: List[List[str]], word: str) -> bool:\n        m = len(board[0])\n        n = len(board)\n        dirs = [[-1, 0], [0, 1], [1, 0], [0, -1]]\n\n        ans = False\n        def dfs(r, c, cnt, visited):\n            if cnt == len(word):\n                nonlocal ans\n                ans = True\n                return\n\n            for x, y in dirs:\n                new_c, new_r = c + x, r + y\n                if (new_c < 0 or new_c >= n) or (new_r < 0 or new_r >= m):\n                    continue\n                if board[new_c][new_r] == word[cnt] and [new_c, new_r] not in visited:\n                    dfs(new_c, new_r, cnt + 1, visited + [[new_c, new_r]])\n                \n        for c in range(n):\n                for r in range(m):\n                    if ans == False and board[c][r] == word[0]:\n                        dfs(c, r, 1, [[c, r]])\n        return ans","compare_result":"0011111111111111111111001001000111111111111111111010110011100011001101110001000001001","title_slug":"word-search","has_notes":false}