{"id":992926935,"lang":"python3","lang_name":"Python3","time":"1 week, 5 days","timestamp":1689187669,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/992926935/","is_pending":"Not Pending","title":"Word Search","memory":"N/A","code":"class Solution:\n    def exist(self, board: List[List[str]], word: str) -> bool:\n        m = len(board)\n        n = len(board[0])\n    \n        def dfs(row, column, wordSoFar):\n            if len(wordSoFar)>len(word):\n                return False\n            if wordSoFar==word:\n                return True\n            hor_moves = [max(0, row-1), min(n-1, row+1)]\n            ver_moves = [max(0, column-1), min(m-1, column+1)]\n            print(hor_moves, ver_moves)\n            for x in hor_moves:\n                for y in ver_moves:\n                    if board[x][y] in word:\n                        dfs(x,y, wordSoFar+board[row][column])\n\n            \n        for x in range(m):\n            for y in range(n):\n                if word[0] == board[x][y]:\n                    if dfs(x,y,\"\"):\n                        return True\n\n        return False\n\n","compare_result":"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"word-search","has_notes":false}