{"id":1000121997,"lang":"python3","lang_name":"Python3","time":"4 days, 2 hours","timestamp":1689938684,"status":10,"status_display":"Accepted","runtime":"1002 ms","url":"/submissions/detail/1000121997/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"20.5 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def hasCycle(self, head: Optional[ListNode]) -> bool:\n\n        tmp = head\n        visited = []\n        while(tmp is not None):\n            if tmp in visited:\n                return True\n\n            visited.append(tmp)\n            tmp = tmp.next\n\n        return False","compare_result":"11111111111111111111111","title_slug":"linked-list-cycle","has_notes":false}