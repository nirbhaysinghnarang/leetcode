{"id":685693382,"lang":"python","lang_name":"Python","time":"1 year, 3 months","timestamp":1650673722,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/685693382/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"13.5 MB","code":"# Definition for a binary tree node.\n# class TreeNode(object):\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution(object):\n    def inorderTraversal(self, root):\n        \"\"\"\n        :type root: TreeNode\n        :rtype: List[int]\n        \"\"\"\n        if not root:\n            return []\n        if (not root.left) and (not root.right):\n            return [root.val]\n        if not root.left:\n            return [root.val]+self.inorderTraversal(root.right)\n        if not root.right:\n            return self.inorderTraversal(root.left)+[root.val]\n        return self.inorderTraversal(root.left)+[root.val]+self.inorderTraversal(root.right)\n        \n            ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal","has_notes":false}