{"id":685693049,"lang":"python","lang_name":"Python","time":"1 year, 3 months","timestamp":1650673648,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/685693049/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode(object):\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution(object):\n    def inorderTraversal(self, root):\n        \"\"\"\n        :type root: TreeNode\n        :rtype: List[int]\n        \"\"\"\n        if not root:\n            return []\n        if not root.left and not root.left:\n            return [root.val]\n        if not root.left:\n            return [root.val]+inorderTraversal(root.right)\n        if not root.right:\n            return inorderTraversal(root.left)+[root.val]\n        return inorderTraversal(root.left)+[root.val]+inorderTraversal(root.right)\n        \n            ","compare_result":"0110000000000000000000000000000000000000000000000000000000000000000000","title_slug":"binary-tree-inorder-traversal","has_notes":false}