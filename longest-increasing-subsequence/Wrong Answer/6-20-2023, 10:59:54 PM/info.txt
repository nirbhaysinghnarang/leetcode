{"id":975747294,"lang":"python3","lang_name":"Python3","time":"1Â month","timestamp":1687282194,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/975747294/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"N/A","code":"class Solution:\n    def lengthOfLIS(self, nums: List[int]) -> int:\n        if not nums:\n            return 0\n\n        max_length = 1\n        left = 0\n        right = 1\n\n        while right < len(nums):\n            if nums[right] > nums[right - 1]:\n                right += 1\n            else:\n                max_length = max(max_length, right - left)\n                left = right\n                right += 1\n\n        return max(max_length, right - left)","compare_result":"001111111111011010000011111101100000000000000000000000","title_slug":"longest-increasing-subsequence","has_notes":false}