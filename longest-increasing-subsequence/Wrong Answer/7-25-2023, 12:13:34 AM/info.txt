{"id":1002913037,"lang":"python3","lang_name":"Python3","time":"19 hours, 20 minutes","timestamp":1690224214,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1002913037/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"N/A","code":"class Solution:\n    def lengthOfLIS(self, nums: List[int]) -> int:\n        L = 0\n        max_seq = []\n        for R in range(1,len(nums)):\n            sequence = nums[L:R]\n            while not sorted(sequence)==sequence:\n                L+=1\n                sequence = nums[L:R]\n\n\n            if len(sequence) > len(max_seq):\n                max_seq = sequence\n\n        return len(max_seq)\n            \n\n\n\n\n       ","compare_result":"000010010101001010000001010000100000000000000000000000","title_slug":"longest-increasing-subsequence","has_notes":false}