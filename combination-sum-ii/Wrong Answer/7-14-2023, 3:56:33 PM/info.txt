{"id":994216311,"lang":"python3","lang_name":"Python3","time":"1Â week, 4Â days","timestamp":1689330393,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/994216311/","is_pending":"Not Pending","title":"Combination Sum II","memory":"N/A","code":"from collections import Counter\n\nclass Solution:\n    def combinationSum2(self, candidates: List[int], target: int) -> List[List[int]]:\n\n        combs = []\n\n\n\n        def dfs(index, path, s, dic):\n            if s > target:\n                return \n            if s == target:\n                combs.append(path)\n                return\n\n            for i in range(len(candidates)):\n                if i!=index and dic[candidates[i]]>0:\n                    dic[candidates[i]]-=1\n                    dfs(i, path + [candidates[i]], s+candidates[i], dic)\n                \n        dfs(0,[],0, Counter(candidates))\n        return combs\n","compare_result":"01101110111100010110000100001000101010001000101001100010000110010011010000110000100100000100100000100001011000001010000000100000000000000000000000000000000000000000000000000000","title_slug":"combination-sum-ii","has_notes":false}