{"id":994215424,"lang":"python3","lang_name":"Python3","time":"1Â week, 4Â days","timestamp":1689330304,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/994215424/","is_pending":"Not Pending","title":"Combination Sum II","memory":"N/A","code":"class Solution:\n    def combinationSum2(self, candidates: List[int], target: int) -> List[List[int]]:\n\n        combs = []\n\n        def dfs(index, path, s):\n            if s > target:\n                return \n            if s == target:\n                if sorted(path) not in combs: \n                    combs.append(path)\n                    return\n\n            for i in range(len(candidates)):\n                if i!=index and candidates[i] not in path:\n                    dfs(i, path + [candidates[i]], s+candidates[i])\n                \n        dfs(0,[],0)\n        return combs\n","compare_result":"00101100111110011111100111001000101010000100101100000010010110011011010010111100100010010000000000110001011000001010000000100000000000000000000000000000000000000000000000000000","title_slug":"combination-sum-ii","has_notes":false}