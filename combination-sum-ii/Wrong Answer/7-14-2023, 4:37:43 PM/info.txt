{"id":994236544,"lang":"python3","lang_name":"Python3","time":"1 week, 4 days","timestamp":1689332863,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/994236544/","is_pending":"Not Pending","title":"Combination Sum II","memory":"N/A","code":"from collections import Counter\n\nclass Solution:\n    def combinationSum2(self, candidates: List[int], target: int) -> List[List[int]]:\n        combs = []\n        c = Counter(candidates)\n        def dfs(index, path, s, dic):\n\n            if s > target:\n                return \n            if s == target:\n                if not sorted(path) in combs:\n                    combs.append((path))\n                    return\n            for i in range(index, len(candidates)):\n                if dic[candidates[i]]>0:\n                    dic[candidates[i]]-=1\n                    dfs(i, path + [candidates[i]], s+candidates[i], dic)\n                    dic[candidates[i]]+=1\n                \n        dfs(0,[],0, dict(c))\n        return combs\n","compare_result":"10111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"combination-sum-ii","has_notes":false}