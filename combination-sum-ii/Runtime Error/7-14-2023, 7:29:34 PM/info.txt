{"id":994340602,"lang":"python3","lang_name":"Python3","time":"1Â week, 4Â days","timestamp":1689343174,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/994340602/","is_pending":"Not Pending","title":"Combination Sum II","memory":"N/A","code":"from collections import Counter\n\nclass Solution:\n    def combinationSum2(self, candidates: List[int], target: int) -> List[List[int]]:\n        combs = []\n        d = dict(Counter(candidates))\n        def dfs(index, path, curr_sum, counter):\n            if curr_sum == target:\n                combs.append(path.copy())\n                return\n\n            if curr_sum > target:\n                return\n\n            for i in range(index, len(candidates)):\n                if index!=i and d[candidates[i]]!=0:\n                    d[candidates[i]]-=1\n                    dfs(index, path+[candidates[i]], curr_sum+candidates[i])\n                    d[candidates[i]]+=1\n            \n        dfs(0,[],0,d)\n        return combs\n            \n\n            \n\n        ","compare_result":"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"combination-sum-ii","has_notes":false}