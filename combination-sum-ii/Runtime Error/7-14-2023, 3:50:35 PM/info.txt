{"id":994212632,"lang":"python3","lang_name":"Python3","time":"1 week, 4 days","timestamp":1689330035,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/994212632/","is_pending":"Not Pending","title":"Combination Sum II","memory":"N/A","code":"class Solution:\n    def combinationSum2(self, candidates: List[int], target: int) -> List[List[int]]:\n\n        combs = []\n        memo = {}\n\n        def dfs(index, path, sum):\n            if sum == target:\n                if memo.get(path) is None:\n                    combs.append(path)\n                    return\n\n            for i in range(len(candidates)):\n                if i!=index:\n                    path.append(candidates[i])\n                    sum+=candidates[i]\n                    dfs(i, path, sum)\n                    memo[path]=True\n                    path.pop()\n                \n        dfs(0,[],0)\n        return combs\n","compare_result":"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"combination-sum-ii","has_notes":false}