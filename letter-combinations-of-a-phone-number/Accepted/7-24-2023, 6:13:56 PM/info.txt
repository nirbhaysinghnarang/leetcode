{"id":1002616342,"lang":"python3","lang_name":"Python3","time":"1 day, 1 hour","timestamp":1690202636,"status":10,"status_display":"Accepted","runtime":"39 ms","url":"/submissions/detail/1002616342/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"16.3 MB","code":"class Solution:\n    def letterCombinations(self, digits: str) -> List[str]:\n        if not digits:\n            return []\n        hm = {\n            \"2\":[\"a\",\"b\",\"c\"],\n            \"3\":[\"d\",\"e\",\"f\"],\n            \"4\":[\"g\",\"h\",\"i\"],\n            \"5\":[\"j\",\"k\",\"l\"],\n            \"6\":[\"m\",\"n\",\"o\"],\n            \"7\":[\"p\",\"q\",\"r\",\"s\"],\n            \"8\":[\"t\",\"u\",\"v\"],\n            \"9\":[\"w\",\"x\",\"y\",\"z\"]\n        }\n        soln = []\n\n        def dfs(index, p):\n            if index==len(digits):\n                soln.append(\"\".join(p))\n                return\n\n            letters = hm[digits[index]]\n            for letter in letters:\n                p.append(letter)\n                dfs(index+1, p)\n                p.pop()\n\n        dfs(0,[])\n        return soln\n\n","compare_result":"1111111111111111111111111","title_slug":"letter-combinations-of-a-phone-number","has_notes":false}