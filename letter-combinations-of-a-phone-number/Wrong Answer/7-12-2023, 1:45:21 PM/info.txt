{"id":992500080,"lang":"python3","lang_name":"Python3","time":"1 week, 6 days","timestamp":1689149721,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/992500080/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"N/A","code":"class Solution:\n    def letterCombinations(self, digits: str) -> List[str]:\n        hm = {\n            \"2\":[\"a\",\"b\",\"c\"],\n            \"3\":[\"d\",\"e\",\"f\"],\n            \"4\":[\"g\",\"h\",\"i\"],\n            \"5\":[\"j\",\"k\",\"l\"],\n            \"6\":[\"m\",\"n\",\"o\"],\n            \"7\":[\"p\",\"q\",\"r\",\"s\"],\n            \"8\":[\"t\",\"u\",\"v\"],\n            \"9\":[\"w\",\"x\",\"y\",\"z\"]\n        }\n        combs = []\n        def dfs(idx, path):\n            if idx==len(digits):\n                combs.append(\"\".join(path))\n            else:\n                letters = hm.get(digits[idx])\n                for l in letters:\n                    dfs(idx+1, path+[l])\n        \n        dfs(0, [])\n        return combs","compare_result":"1011111111111111111111111","title_slug":"letter-combinations-of-a-phone-number","has_notes":false}