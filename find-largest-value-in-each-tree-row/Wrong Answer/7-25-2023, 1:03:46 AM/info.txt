{"id":1002950924,"lang":"python3","lang_name":"Python3","time":"18 hours, 29 minutes","timestamp":1690227226,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1002950924/","is_pending":"Not Pending","title":"Find Largest Value in Each Tree Row","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nfrom collections import deque\nclass Solution:\n    def largestValues(self, root: Optional[TreeNode]) -> List[int]:\n        arr = []\n        q = deque()\n        if not root:\n            q.append(root)\n\n        while len(q) > 0:\n            level_heap = []\n            for _ in range(len(q)):\n                cur = q.popleft()\n                heapq.heappush(level_heap, cur.val)\n                if cur.left:\n                    q.append(cur.left)\n                if cur.right:\n                    q.append(cur.right)\n\n            arr.append(heapq.heappop(level_heap))\n\n        return arr\n\n\n\n        ","compare_result":"000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"find-largest-value-in-each-tree-row","has_notes":false}