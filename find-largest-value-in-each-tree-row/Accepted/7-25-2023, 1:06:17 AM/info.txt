{"id":1002952629,"lang":"python3","lang_name":"Python3","time":"18 hours, 27 minutes","timestamp":1690227377,"status":10,"status_display":"Accepted","runtime":"58 ms","url":"/submissions/detail/1002952629/","is_pending":"Not Pending","title":"Find Largest Value in Each Tree Row","memory":"18.8 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nfrom collections import deque\nclass Solution:\n    def largestValues(self, root: Optional[TreeNode]) -> List[int]:\n        arr = []\n        q = deque()\n        if root:\n            q.append(root)\n\n        while len(q) > 0:\n            level_heap = []\n            for _ in range(len(q)):\n                cur = q.popleft()\n                level_heap.append(cur.val)\n                if cur.left:\n                    q.append(cur.left)\n                if cur.right:\n                    q.append(cur.right)\n            if level_heap:\n                arr.append(max(level_heap))\n\n        return arr\n\n\n\n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-largest-value-in-each-tree-row","has_notes":false}