{"id":1002782011,"lang":"python3","lang_name":"Python3","time":"21 hours, 46 minutes","timestamp":1690215454,"status":10,"status_display":"Accepted","runtime":"43 ms","url":"/submissions/detail/1002782011/","is_pending":"Not Pending","title":"Binary Tree Paths","memory":"16.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def binaryTreePaths(self, root: Optional[TreeNode]) -> List[str]:\n        paths = []\n\n        def dfs(node, path):\n            if not node:\n                return\n            if node.left is None and node.right is None:\n                path.append(str(node.val))\n                paths.append(\"->\".join(path.copy()))\n                path.pop()\n                return\n\n            path.append(str(node.val))\n            dfs(node.left, path)\n            dfs(node.right, path)\n            path.pop()\n\n\n        dfs(root, [])\n        return paths\n\n            ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-paths","has_notes":false}