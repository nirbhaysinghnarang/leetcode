{"id":1002780796,"lang":"python3","lang_name":"Python3","time":"21 hours, 47 minutes","timestamp":1690215368,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1002780796/","is_pending":"Not Pending","title":"Binary Tree Paths","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def binaryTreePaths(self, root: Optional[TreeNode]) -> List[str]:\n        paths = []\n\n        def dfs(node, path):\n            if not node:\n                return\n            if node.left is None and node.right is None:\n                paths.append(\"->\".join(path.copy()))\n                return\n            path.append(node.val)\n            dfs(node.left, path)\n            dfs(node.right, path)\n            path.pop()\n\n\n        dfs(root, [])\n        return paths\n\n            ","compare_result":"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"binary-tree-paths","has_notes":false}