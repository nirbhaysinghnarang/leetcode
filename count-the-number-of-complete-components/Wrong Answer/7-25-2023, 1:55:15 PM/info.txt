{"id":1003377145,"lang":"python3","lang_name":"Python3","time":"5 hours, 38 minutes","timestamp":1690273515,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1003377145/","is_pending":"Not Pending","title":"Count the Number of Complete Components","memory":"N/A","code":"class Solution:\n    def countCompleteComponents(self, n: int, edges: List[List[int]]) -> int:\n        def findComponentsDFS(visited, components, graph):\n            for node in range(n):\n                if node not in visited:\n                    connected_component = []\n                    DFS(node, visited, connected_component, graph)\n                    components.append(connected_component.copy())\n    \n\n        def DFS(node, visited, nodes_in_component, graph):\n            if node in visited:\n                return\n            nodes_in_component.append(node)\n            visited.add(node)\n            neighbours = graph[node]\n            for n in neighbours:\n                DFS(n, visited, nodes_in_component, graph)\n\n        graph = defaultdict(list)\n\n        for a,b in edges:\n            graph[a].append(b)\n            graph[b].append(a)\n\n\n        components = []\n        visited = set()\n        findComponentsDFS(visited, components, graph)\n        cnt = 0\n        for component in components:\n            print(component)\n            num_nodes = len(component)\n            edges = 0\n            for node in component:\n                print(graph[node])\n                edges+=len(graph[node])\n\n            if edges == (num_nodes * (num_nodes-1)) / 2:\n                cnt+=1\n\n        return cnt\n\n\n\n\n       ","compare_result":"001101000111010000001111011010111110000000000000000000011111111111111111111101000000000011110110011011010011011011100110101001111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111101111111111111111111111111111111111111111111110111111111111111111111011110111111111111111111111111111111101111111111111011011111111111111111111110011011111111111111111111111111111111111111111111111111111111000010000000011010010000000000000000000000000000001000100000000000000000000000000000010000000101010000000010000000001000000010000000000000000000000000000001000000000000001100100100000000000001000000000000000000000000011100010001000000001000010000010001111111111111111111111111111110111111111111111111111111111111111111111111111111111111111111111111111111111111110111111111111111111111111111111111111111111111111111111111111011111111111111111111111111011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000100100110000000101001000000111101100010000100001111000010011111100010000110110000110001000100001000000010101100000110000000001000000001000011000000001100100101010010001010100000000000000000100010000000000001000000000010010000011001001000000000000000100011011111010011101010010110001010110001010110001000110001101100110000100010011000000001001010000100000101000011000100010000001010110000000001111010000000000000000000010010011000100000000100000010000000000000000010000000000000000000000000100100011000000001000000011010000101000000111000011010000110001000000100000110001000000110110111000010001100010010000000010000100010000000001000100110000000000100000001000010100000000100000001000000000000000000000000000000000000000000000000000000000000000000000000000011011000000001111000110100001000000010010000000000000001100001000000000000000000000010011001000000010000000000010010001001111011010010011100001101001110101011101111100101011000110000000010000000110011000110001110000000110110000000110000000011001000000000000010100000000000000100001000000000010001000000000001000000000000000001000000000000000000000000000000000000000110000000100001111011011110011000100000000000011100100000010000000000000000000000000000000000010000000000000000000000000000001011111101101010111110110000111010100010100101101000000010000100000000000000010010000000000000000000000000000000000000000000000101110111111001110000011010110111111110110110101001000001001011000110001010010010010000011111100100000001000000000001001001010000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000010000000000000000000000001111000100000000110000000011000110011010000001000000000011000100000100000000010100010000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010101101001010111110101101111111111011100101101111110011011011100000010100100010000110101111001001010110011100010000010000010000000001000110100110000100000000001000000010001000000000000000000101100000000000000000000000000000000000100000000000000011001110110100011111101110000110100111110001011001000010000100001110010001100000000000000000000000010000000000000000000000000010","title_slug":"count-the-number-of-complete-components","has_notes":false}