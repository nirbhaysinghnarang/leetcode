{"id":991621177,"lang":"python3","lang_name":"Python3","time":"2Â weeks","timestamp":1689060200,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/991621177/","is_pending":"Not Pending","title":"Two Sum II - Input Array Is Sorted","memory":"N/A","code":"class Solution:\n   \n    def twoSum(self, numbers: List[int], target: int) -> List[int]:\n        for (idx,i) in enumerate(numbers):\n            comp=target-i\n            if(comp<i):\n                #must be to the left of current index\n                left_subarray = numbers[:idx]\n                comp_idx =  self.binarySearch(left_subarray, target, idx)\n                if(comp_idx!=-1):\n                    return [idx+1, comp_idx+1]\n            else:\n                #is to the right\n                right_subarray = numbers[idx+1:]\n                comp_idx = self.binarySearch(right_subarray, target, idx)\n                if(comp_idx!=-1):\n                    return [idx+1, comp_idx+1+idx+1]\n            \n    \n    def binarySearch(self, nums, target, flag):\n        l, r = 0, len(nums)-1\n        print(target, nums)\n        while(l<=r):\n            mid = (l+r)//2\n            if(nums[mid]==target and mid!=flag):\n                return mid\n            if nums[mid]>target:\n                r = mid-1\n            else:\n                l = mid+1\n        return -1","compare_result":"00000000000000000000000","title_slug":"two-sum-ii-input-array-is-sorted","has_notes":false}