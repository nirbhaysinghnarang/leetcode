{"id":995742992,"lang":"python3","lang_name":"Python3","time":"1Â week, 2Â days","timestamp":1689498133,"status":10,"status_display":"Accepted","runtime":"133 ms","url":"/submissions/detail/995742992/","is_pending":"Not Pending","title":"Two Sum II - Input Array Is Sorted","memory":"17.4 MB","code":"class Solution:\n   \n    def twoSum(self, numbers: List[int], target: int) -> List[int]:\n        L, R = 0, len(numbers)-1\n        while(L<R):\n            s = numbers[L]+numbers[R]\n            if s == target:\n                return [L+1, R+1]\n            if s < target:\n                L += 1\n            else: \n                R -= 1\n\n        return [L+1, R+1]\n\n\n\n\n\n        for (idx,i) in enumerate(numbers):\n            comp=target-i\n            if(comp<i):\n                #must be to the left of current index\n                left_subarray = numbers[:idx]\n                comp_idx =  self.binarySearch(numbers[:idx], target, idx)\n                if(comp_idx!=-1):\n                    return [idx+1, comp_idx+1]\n            else:\n                #is to the rifh\n                comp_idx = self.binarySearch(numbers[idx+1:], target, idx, False)\n            if(comp_idx!=-1):\n                return [idx+1, idx + 1+ comp_idx+1]\n            \n    \n    def binarySearch(self, nums, target, flag):\n        l, r = 0, len(nums)-1\n        while(l<=r):\n            mid = (l+r)//2\n            if(nums[mid]==target and mid!=flag):\n                return mid\n            if nums[mid]>target:\n                right = mid-1\n            else:\n                left = mid+1\n        return -1","compare_result":"11111111111111111111111","title_slug":"two-sum-ii-input-array-is-sorted","has_notes":false}