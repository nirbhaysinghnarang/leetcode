{"id":1002521679,"lang":"python3","lang_name":"Python3","time":"1 day, 3 hours","timestamp":1690193417,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1002521679/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nfrom collections import deque\nclass Solution:\n    def rightSideView(self, root: Optional[TreeNode]) -> List[int]:\n        #BFS add only right child\n        q = deque()\n        if root:\n            q.append(root)\n\n        soln = []\n\n        while(len(q)>0):\n            for _ in range(len(q)):\n                curr = q.popleft()\n                soln.append(curr.val)\n                if curr.right:\n                    q.append(curr.right)\n\n        return soln\n","compare_result":"111101000100100010000000000011001100000100000000000010000000010000001100000001000000010000000000000000000100000010000000000000000000000000001000000110010110100001001000000011000100010000010000010000000000000000000001","title_slug":"binary-tree-right-side-view","has_notes":false}