{"id":1002522414,"lang":"python3","lang_name":"Python3","time":"1 day, 3 hours","timestamp":1690193484,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1002522414/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nfrom collections import deque\nclass Solution:\n    def rightSideView(self, root: Optional[TreeNode]) -> List[int]:\n        #BFS add only right child\n        q = deque()\n        if root:\n            q.append(root)\n\n        soln = []\n\n        while(len(q)>0):\n            for _ in range(len(q)):\n                curr = q.popleft()\n                soln.append(curr.val)\n                if curr.right:\n                    q.append(curr.right)\n                    continue\n                if curr.left:\n                    q.append(curr.left)\n                    continue\n\n        return soln\n","compare_result":"111111001110110111110110100111111111111111101111000111110010110111111111111101111111011111110111001101101110111011111000101100101011111010111110010110011110111101111111101011011110110110111011111111111001100100100101","title_slug":"binary-tree-right-side-view","has_notes":false}