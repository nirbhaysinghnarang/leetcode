{"id":1000353902,"lang":"python3","lang_name":"Python3","time":"3 days, 20 hours","timestamp":1689960819,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1000353902/","is_pending":"Not Pending","title":"Reorder List","memory":"N/A","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def reorderList(self, head: Optional[ListNode]) -> None:\n        \"\"\"\n        Do not return anything, modify head in-place instead.\n        \"\"\"\n        newhead = head\n        tmp = head\n\n\n        second_half = self.mid(tmp)\n        second_half=self.reverse(second_half)\n        print(second_half)\n\n        while second_half and newhead:\n            newhead.next = second_half\n            newhead = newhead.next\n            second_half = second_half.next\n\n        if second_half:\n            newhead.next = second_half\n\n\n        head = newhead\n    \n\n    def mid(self, head):\n        fast, slow = head, head\n        while(fast and fast.next):\n            fast = fast.next.next\n            slow = slow.next\n\n        return slow\n\n\n    def reverse(self, head):\n        prev, curr = None, head\n        while curr is not None:\n            nxt = curr.next\n            prev = curr\n            curr.next = prev\n            curr = nxt\n\n        return prev\n\n","compare_result":"000000000000","title_slug":"reorder-list","has_notes":false}