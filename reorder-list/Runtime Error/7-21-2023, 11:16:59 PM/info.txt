{"id":1000363882,"lang":"python3","lang_name":"Python3","time":"3 days, 20 hours","timestamp":1689961619,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1000363882/","is_pending":"Not Pending","title":"Reorder List","memory":"N/A","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def reorderList(self, head: Optional[ListNode]) -> None:\n        \"\"\"\n        Do not return anything, modify head in-place instead.\n        \"\"\"\n        if not head or not head.next:\n            return None\n\n        mid = self.mid(head)\n        second_half = self.reverse(mid.next)\n        mid.next = None\n\n        mergeLists(head, second_half)\n    \n\n    def mid(self, head):\n        fast, slow = head, head\n        while(fast is not None and fast.next is not None):\n            fast = fast.next.next\n            slow = slow.next\n\n        return slow\n\n\n    def reverse(self, head):\n        prev, curr = None, head\n        while(curr is not None):\n            nxt = curr.next\n            curr.next = prev\n            prev = curr\n            curr = nxt\n        return prev\n\n    def mergeLists(self, head1, head2):\n        while head2:\n            tmp1, tmp2 = head1.next, head2.next\n            head1.next = head2\n            head2.next = tmp1\n            head1, head2 = tmp1, tmp2\n","compare_result":"000000000000","title_slug":"reorder-list","has_notes":false}