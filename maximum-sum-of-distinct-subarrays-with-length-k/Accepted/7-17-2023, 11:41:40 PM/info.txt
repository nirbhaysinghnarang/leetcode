{"id":996931149,"lang":"python3","lang_name":"Python3","time":"1Â week","timestamp":1689617500,"status":10,"status_display":"Accepted","runtime":"965 ms","url":"/submissions/detail/996931149/","is_pending":"Not Pending","title":"Maximum Sum of Distinct Subarrays With Length K","memory":"33.5 MB","code":"class Solution:\n    def maximumSubarraySum(self, nums: List[int], k: int) -> int:\n        l = 0\n        ctr = Counter()\n        curr = 0\n        max_sum = -math.inf\n        \n        for r in range(len(nums)):\n            ctr[nums[r]] += 1\n            curr += nums[r]\n            \n            while ctr[nums[r]] > 1 or (r - l + 1) > k:\n                curr -= nums[l]\n                ctr[nums[l]] -= 1\n                l += 1\n            \n            if (r - l + 1) == k:\n                max_sum = max(max_sum, curr)\n            \n        return max_sum if max_sum != -math.inf else 0             ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-sum-of-distinct-subarrays-with-length-k","has_notes":false}