{"id":996909735,"lang":"python3","lang_name":"Python3","time":"1Â week","timestamp":1689616014,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/996909735/","is_pending":"Not Pending","title":"Maximum Sum of Distinct Subarrays With Length K","memory":"N/A","code":"class Solution:\n    def maximumSubarraySum(self, nums: List[int], k: int) -> int:\n        L = 0\n        window_set = set(nums[:k+1])\n        print(window_set)\n        max_sum = sum(nums[:k+1]) if len(window_set)==k else 0\n        window_sum = max_sum\n        for R in range(k, len(nums)):\n            window_set.add(nums[R])\n            window_set.remove(nums[L])\n            window_sum += nums[R]\n            window_sum -= nums[L]\n            L+=1\n            if len(window_set)==k:\n                max_sum = max(max_sum, window_sum)\n        return max_sum\n\n","compare_result":"01000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"maximum-sum-of-distinct-subarrays-with-length-k","has_notes":false}