{"id":991724231,"lang":"python3","lang_name":"Python3","time":"2Â weeks","timestamp":1689070210,"status":10,"status_display":"Accepted","runtime":"50 ms","url":"/submissions/detail/991724231/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.4 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isSymmetric(self, root: Optional[TreeNode]) -> bool:\n        if not root:\n            return True\n        \n        return self.checkSymmetry(root.left, root.right)\n\n    def checkSymmetry(self, left: Optional[TreeNode], right: Optional[TreeNode]) -> bool:\n        if not left and not right:\n            return True\n        \n        if not left or not right:\n            return False\n        \n        return (\n            left.val == right.val\n            and self.checkSymmetry(left.left, right.right)\n            and self.checkSymmetry(left.right, right.left)\n        )","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false}