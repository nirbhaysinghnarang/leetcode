{"id":991721734,"lang":"python3","lang_name":"Python3","time":"2Â weeks","timestamp":1689069971,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/991721734/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isSymmetric(self, root: Optional[TreeNode]) -> bool:\n        if not root:\n            return True\n        if not (root.left or  root.right):\n            return False\n        \n        return root.left.val == root.right.val and self.isSymmetric(root.left) and self.isSymmetric(root.right)\n","compare_result":"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"symmetric-tree","has_notes":false}