{"id":991721359,"lang":"python3","lang_name":"Python3","time":"2Â weeks","timestamp":1689069935,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/991721359/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isSymmetric(self, root: Optional[TreeNode]) -> bool:\n        if not root:\n            return True\n        if not root.left or not root.right:\n            return False\n        \n        return root.left.val == root.right.val and self.isSymmetric(root.left) and self.isSymmetric(root.right)\n","compare_result":"0111011101010111110110101010110001100111101111011111111110110111101100011011000111111111010011110111100101101101111011010111100010011100101111010000111001101011000110001001111100111100110011010111111","title_slug":"symmetric-tree","has_notes":false}