{"id":1002520187,"lang":"python3","lang_name":"Python3","time":"1 day, 3 hours","timestamp":1690193281,"status":10,"status_display":"Accepted","runtime":"57 ms","url":"/submissions/detail/1002520187/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"17 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nfrom collections import deque\nclass Solution:\n    def levelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:\n\n        soln = []\n        q = deque()\n\n\n        if root:\n            q.append(root)\n\n\n        while len(q) > 0:\n            curr_lvl = []\n            for _ in range(len(q)):\n                curr = q.popleft()\n                curr_lvl.append(curr.val)\n                if curr.left:\n                    q.append(curr.left)\n                if curr.right:\n                    q.append(curr.right)\n            soln.append(curr_lvl)\n\n        return soln\n\n\n\n","compare_result":"11111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal","has_notes":false}