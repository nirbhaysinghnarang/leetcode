{"id":1002620837,"lang":"python3","lang_name":"Python3","time":"1 day, 1 hour","timestamp":1690203058,"status":10,"status_display":"Accepted","runtime":"663 ms","url":"/submissions/detail/1002620837/","is_pending":"Not Pending","title":"Palindrome Partitioning","memory":"33.7 MB","code":"class Solution:\n    def partition(self, s: str) -> List[List[str]]:\n        ans = []\n        def isPal(s):\n            return s==s[::-1]\n\n        def dfs(index, partition):\n            if index==len(s):\n                ans.append(partition.copy())\n                return\n\n            for i in range(index, len(s)):\n                if isPal(s[index:i+1]):\n                    partition.append(s[index:i+1])\n                    dfs(i+1, partition)\n                    partition.pop()\n\n        dfs(0, [])\n        return ans","compare_result":"11111111111111111111111111111111","title_slug":"palindrome-partitioning","has_notes":false}