{"id":1002619436,"lang":"python3","lang_name":"Python3","time":"1 day, 1 hour","timestamp":1690202932,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1002619436/","is_pending":"Not Pending","title":"Palindrome Partitioning","memory":"N/A","code":"class Solution:\n    def partition(self, s: str) -> List[List[str]]:\n        ans = []\n        def isPal(s):\n            print(s)\n            return s==s[::-1]\n\n        def dfs(index, partition):\n            if index==len(s):\n                ans.append(partition)\n                return\n\n            for i in range(index, len(s)):\n                if isPal(s[index:i+1]):\n                    partition.append(s[index:i])\n                    dfs(i+1, partition)\n                    partition.pop()\n\n        dfs(0, [])\n        return ans","compare_result":"00000000000000000000000000000000","title_slug":"palindrome-partitioning","has_notes":false}