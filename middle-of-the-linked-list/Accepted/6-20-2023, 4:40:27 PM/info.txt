{"id":975503039,"lang":"python3","lang_name":"Python3","time":"1Â month","timestamp":1687259427,"status":10,"status_display":"Accepted","runtime":"49 ms","url":"/submissions/detail/975503039/","is_pending":"Not Pending","title":"Middle of the Linked List","memory":"16.2 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def middleNode(self, head: Optional[ListNode]) -> Optional[ListNode]:\n        sz=0\n        temp_head = head\n        while(temp_head is not None):\n            sz+=1\n            temp_head = temp_head.next\n        \n        temp_head = head\n        target_idx = sz//2\n        count = 0\n        while(count!=target_idx):\n            temp_head = temp_head.next\n            count+=1\n\n\n        return temp_head\n        \n            \n\n\n\n        ","compare_result":"111111111111111111111111111111111111","title_slug":"middle-of-the-linked-list","has_notes":false}