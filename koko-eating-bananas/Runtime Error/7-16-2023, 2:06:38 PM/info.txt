{"id":995728874,"lang":"python3","lang_name":"Python3","time":"1 week, 2 days","timestamp":1689496598,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/995728874/","is_pending":"Not Pending","title":"Koko Eating Bananas","memory":"N/A","code":"class Solution:\n    def minEatingSpeed(self, piles: List[int], h: int) -> int:\n        L = 1\n        R = max(piles)\n\n        ans_index = 0\n\n        while(L<=R):\n            mid = (L+R)//2\n            #if koko can eat all bananas with this speed\n            if(self.canEatAll(piles, h, mid)):\n                ans_index = mid\n                R = mid-1\n            else:\n                L = mid+1\n\n        return ans_index\n\n    def canEatAll(self, piles, hours, k):\n        count = 0\n        for each in piles:\n            count+=ceil(each/k)\n        return count <= h\n","compare_result":"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"koko-eating-bananas","has_notes":false}