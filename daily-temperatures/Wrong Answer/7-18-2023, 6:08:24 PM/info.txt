{"id":997553439,"lang":"python3","lang_name":"Python3","time":"1Â week","timestamp":1689683904,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/997553439/","is_pending":"Not Pending","title":"Daily Temperatures","memory":"N/A","code":"class Solution:\n    def dailyTemperatures(self, temperatures: List[int]) -> List[int]:\n        stack = []\n        ans = [0] * len(temperatures)\n        for (i, t) in enumerate(temperatures):\n            while stack and stack[-1][0] > t:\n                ans[i] = stack[-1][0] - i\n                stack.pop()\n            stack.append((i,t))\n        return ans\n\n\n    def naive(self, temperatures):\n        ans = [0] * len(temperatures)\n        hm = {}\n        for (i,t) in enumerate(temperatures):\n            hm[i] = t\n        for (i,t) in enumerate(temperatures):\n            min_idx = float('inf')\n            for key in hm:\n                if key > i and hm[key] > t:\n                    min_idx = min(min_idx, key)\n            ans[i] = 0 if min_idx == float('inf') else min_idx - i\n\n        return ans\n\n\n\n\n        \n","compare_result":"000000000000000000000000000000000000000000000000","title_slug":"daily-temperatures","has_notes":false}