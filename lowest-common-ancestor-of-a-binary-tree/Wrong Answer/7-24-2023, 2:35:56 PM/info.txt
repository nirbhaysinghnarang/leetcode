{"id":1002480938,"lang":"python3","lang_name":"Python3","time":"1 day, 4 hours","timestamp":1690189556,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1002480938/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':\n        print(root)\n        if not root:\n            return None\n        if root is p:\n            return p\n        if root is q:\n            return q\n\n        if root.left is p and root.right is q:\n            return root\n\n        if root.right is p and root.left is q:\n            return root\n\n        left = self.lowestCommonAncestor(root.left, p, q)\n        right = self.lowestCommonAncestor(root.right, p,q)\n\n        if not left:\n            return right\n        if not right:\n            return left\n        ","compare_result":"1111111110010110001011000100000","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false}