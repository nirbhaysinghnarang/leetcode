{"id":995085463,"lang":"python3","lang_name":"Python3","time":"1Â week, 3Â days","timestamp":1689428721,"status":10,"status_display":"Accepted","runtime":"256 ms","url":"/submissions/detail/995085463/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"29.6 MB","code":"class Solution:\n    def minSubArrayLen(self, target: int, nums: List[int]) -> int:\n        L = 0\n        l = float('inf')\n        curSum = 0\n        for R in range(len(nums)):\n            curSum += nums[R]\n            while(curSum >= target):\n                l = min(R-L+1, l)\n                curSum -= nums[L]\n                L += 1\n\n        return 0 if l == float('inf') else l\n\n","compare_result":"111111111111111111111","title_slug":"minimum-size-subarray-sum","has_notes":false}