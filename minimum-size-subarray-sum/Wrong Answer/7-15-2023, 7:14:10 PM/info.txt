{"id":995084783,"lang":"python3","lang_name":"Python3","time":"1Â week, 3Â days","timestamp":1689428650,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/995084783/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"N/A","code":"class Solution:\n    def minSubArrayLen(self, target: int, nums: List[int]) -> int:\n        L = 0\n        l = float('-inf')\n        curSum = 0\n        for R in range(len(nums)):\n            curSum += nums[R]\n            while(curSum >= target):\n                curSum -= nums[L]\n                L += 1\n                l = min(R-L+1, l)\n\n        return 0 if l == float('-inf') else l\n\n","compare_result":"001001000000000010000","title_slug":"minimum-size-subarray-sum","has_notes":false}