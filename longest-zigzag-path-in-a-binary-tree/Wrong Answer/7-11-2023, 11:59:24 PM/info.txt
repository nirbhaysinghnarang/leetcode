{"id":992075261,"lang":"python3","lang_name":"Python3","time":"1 week, 6 days","timestamp":1689100164,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/992075261/","is_pending":"Not Pending","title":"Longest ZigZag Path in a Binary Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def longestZigZag(self, root: Optional[TreeNode]) -> int:\n        def zigZagDFS(root, direction, score):\n            if root is None:\n                return score\n            if direction==\"L\":\n                return max(zigZagDFS(root.left, \"R\", score+1), zigZagDFS(root.right, \"R\", 0))\n            return  max(zigZagDFS(root.right, \"L\", score+1), zigZagDFS(root.left, \"L\", 0))\n        \n        return max(zigZagDFS(root, \"L\", 0), zigZagDFS(root, \"R\", 0))\n\n","compare_result":"0000000000000000000000000000000000000000000000000000000000","title_slug":"longest-zigzag-path-in-a-binary-tree","has_notes":false}