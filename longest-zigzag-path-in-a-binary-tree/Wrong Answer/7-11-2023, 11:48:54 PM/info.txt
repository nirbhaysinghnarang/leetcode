{"id":992066392,"lang":"python3","lang_name":"Python3","time":"1 week, 6 days","timestamp":1689099534,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/992066392/","is_pending":"Not Pending","title":"Longest ZigZag Path in a Binary Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def longestZigZag(self, root: Optional[TreeNode]) -> int:\n        def helper(root, direction):\n            if root is None:\n                return 0\n            \n            if direction == \"L\":\n                return max(1+helper(root.right, \"R\"), helper(root.left, direction))\n            return max(1+helper(root.left, \"L\"), helper(root.right, direction))\n\n        return max(helper(root, \"L\"), helper(root, \"R\"))-1","compare_result":"1111111111111111001001000000100010000000000000000000000010","title_slug":"longest-zigzag-path-in-a-binary-tree","has_notes":false}