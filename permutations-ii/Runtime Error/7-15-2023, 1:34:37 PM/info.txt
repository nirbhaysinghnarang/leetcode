{"id":994893791,"lang":"python3","lang_name":"Python3","time":"1Â week, 3Â days","timestamp":1689408277,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/994893791/","is_pending":"Not Pending","title":"Permutations II","memory":"N/A","code":"from collections import Counter\nclass Solution:\n    def permuteUnique(self, nums: List[int]) -> List[List[int]]:\n\n        perms = []\n        def dfs(index, path,d):\n            if index==len(nums)-1:\n                perms.append(path.copy())\n                return\n\n            for i in range(len(nums)):\n                if i!=index and d[num]>0:\n                    path.append(nums[i])\n                    d[num]-=1\n                    dfs(i, path, d)\n                    path.pop()\n                    d[num]+=1\n        dfs(0,[],dict(Counter(nums)))\n        return perms\n           \n","compare_result":"000000000000000000000000000000000","title_slug":"permutations-ii","has_notes":false}