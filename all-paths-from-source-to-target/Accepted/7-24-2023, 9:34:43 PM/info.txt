{"id":1002771411,"lang":"python3","lang_name":"Python3","time":"21 hours, 59 minutes","timestamp":1690214683,"status":10,"status_display":"Accepted","runtime":"105 ms","url":"/submissions/detail/1002771411/","is_pending":"Not Pending","title":"All Paths From Source to Target","memory":"18.6 MB","code":"class Solution:\n    def allPathsSourceTarget(self, graph: List[List[int]]) -> List[List[int]]:\n        dest = len(graph)-1\n        paths = []\n        def dfs(i, path):\n            if i==dest:\n                paths.append(path.copy())\n                return\n\n            neighbours = graph[i]\n            for n in neighbours:\n                path.append(n)\n                dfs(n, path)\n                path.pop()\n\n        dfs(0, [0])\n        return paths","compare_result":"111111111111111111111111111111","title_slug":"all-paths-from-source-to-target","has_notes":false}