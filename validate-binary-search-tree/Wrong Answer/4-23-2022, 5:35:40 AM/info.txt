{"id":685686915,"lang":"python","lang_name":"Python","time":"1 year, 3 months","timestamp":1650672340,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/685686915/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode(object):\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution(object):\n    def isValidBST(self, root):\n        \"\"\"\n        :type root: TreeNode\n        :rtype: bool\n        \"\"\"\n        #BST is valid if left.val < root.val && right.val < root.val && left, right are valid.\n        \n        if not root:\n            return True\n        if (not root.left) and root.right:\n            return False\n        if (not root.right) and root.left:\n            return False\n        if (not root.right) and (not root.left):\n            return True\n        node_check = root.left.val < root.val and root.right.val > root.val\n        return node_check and self.isValidBST(root.left) and self.isValidBST(root.right)","compare_result":"11111110110011001110100000000000000000011011011111100110111011111101011101101110","title_slug":"validate-binary-search-tree","has_notes":false}