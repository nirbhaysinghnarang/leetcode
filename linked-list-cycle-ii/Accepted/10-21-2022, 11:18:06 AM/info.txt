{"id":827109103,"lang":"python","lang_name":"Python","time":"9 months, 1 week","timestamp":1666331286,"status":10,"status_display":"Accepted","runtime":"83 ms","url":"/submissions/detail/827109103/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"20.2 MB","code":"# Definition for singly-linked list.\n# class ListNode(object):\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution(object):\n    def detectCycle(self, head):\n        \"\"\"\n        :type head: ListNode\n        :rtype: ListNode\n        \"\"\"\n        visited = set()\n\n        node = head\n        while node is not None:\n            if node in visited:\n                return node\n            else:\n                visited.add(node)\n                node = node.next\n\n        return None\n        ","compare_result":"11111111111111111","title_slug":"linked-list-cycle-ii","has_notes":false}