{"id":1003381038,"lang":"python3","lang_name":"Python3","time":"5 hours, 31 minutes","timestamp":1690273898,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1003381038/","is_pending":"Not Pending","title":"Number of Provinces","memory":"N/A","code":"class Solution:\n    def findCircleNum(self, isConnected: List[List[int]]) -> int:\n\n        def dfs(node, visited):\n            if node in visited:\n                return\n            visited.add(node)\n            for n in isConnected[node]:\n                if n==1:\n                    dfs(n, visited)\n\n        provinces = 0\n        visited = set()\n\n        n = len(isConnected)\n        print(n)\n        for city in range(n):\n            if city not in visited:\n                dfs(city, visited)\n                provinces+=1\n        \n        return provinces\n\n      \n            \n","compare_result":"100001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"number-of-provinces","has_notes":false}